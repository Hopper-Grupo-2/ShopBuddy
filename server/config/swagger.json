{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Shopbuddy API teste",
    "language": "pt-BR",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:4021",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Endpoints to manage users"
    },
    {
      "name": "List",
      "description": "Endpoints to manage lists/products"
    },
    {
      "name": "Message",
      "description": "Endpoints to manage messages/chat"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/lists/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "listName": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/lists/user/{userId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/lists/{listId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/lists/{listId}/members": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "description": "",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/lists/products/search/{searchTerm}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/lists/{listId}/products": {
      "patch": {
        "description": "",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/lists/{listId}/members/{memberId}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/lists/{listId}/products/{productId}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "description": "",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/users/": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para listar todos os usuários",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "null"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User2"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Autenticação inválida",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "UnauthorizedError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Make login first"
                    }
                  }
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "$ref": "#/definitions/Error500"
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/users/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para recuperar um usuário",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "null"
                },
                "data": {
                  "$ref": "#/definitions/User"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Autenticação inválida",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "UnauthorizedError"
                    },
                    "message": {
                      "type": "string",
                      "example": "token is missing or invalid"
                    }
                  }
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Não encontrado",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "NotFoundError"
                    },
                    "message": {
                      "type": "string",
                      "example": "There is no user with the given id"
                    }
                  }
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "422": {
            "description": "Erro de Validação",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "$ref": "#/definitions/UserByIdValidator"
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "$ref": "#/definitions/Error500"
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para atualizar os dados de um usuário",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateUser",
            "in": "body",
            "description": "dados para atualizar o usuário",
            "schema": {
              "$ref": "#/definitions/UpdateUser"
            }
          },
          {
            "name": "errors",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "null"
                },
                "data": {
                  "$ref": "#/definitions/User"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Autenticação inválida",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "UnauthorizedError"
                    },
                    "message": {
                      "type": "string",
                      "example": "token is missing or invalid"
                    }
                  }
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Proíbido",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "ForbiddenError"
                    },
                    "message": {
                      "type": "string",
                      "example": "User 64c65cb75765cdcc8475091e does not have access"
                    }
                  }
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Não encontrado",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "NotFoundError"
                    },
                    "message": {
                      "type": "string",
                      "example": "There is no user with the given id"
                    }
                  }
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "Conflito de dados",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Conflict"
                    },
                    "message": {
                      "type": "string",
                      "example": "This e-mail is already in use"
                    }
                  }
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "422": {
            "description": "Erro de Validação",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "$ref": "#/definitions/UpdateUserValidator"
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "$ref": "#/definitions/Error500"
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para excluir um usuário",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "null"
                },
                "data": {
                  "type": "string",
                  "example": "User with id ${userId} deleted successfully!"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Autenticação inválida",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "UnauthorizedError"
                    },
                    "message": {
                      "type": "string",
                      "example": "token is missing or invalid"
                    }
                  }
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Proíbido",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "ForbiddenError"
                    },
                    "message": {
                      "type": "string",
                      "example": "User ${userId} does not have access"
                    }
                  }
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Não encontrado",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "NotFoundError"
                    },
                    "message": {
                      "type": "string",
                      "example": "There is no user with the given id"
                    }
                  }
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "422": {
            "description": "Erro de Validação",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "$ref": "#/definitions/RemoveUserValidator"
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "$ref": "#/definitions/Error500"
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/users/search/{searchTerm}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/users/logout": {
      "delete": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/users/signup": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para registrar um novo usuário",
        "parameters": [
          {
            "name": "Register",
            "in": "body",
            "description": "dados para registrar o usuário",
            "schema": {
              "$ref": "#/definitions/Register"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "null"
                },
                "data": {
                  "$ref": "#/definitions/User"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Autenticação inválida",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "UnauthorizedError"
                    },
                    "message": {
                      "type": "string",
                      "example": "This e-mail is already in use"
                    }
                  }
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "422": {
            "description": "Erro de Validação",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "$ref": "#/definitions/RegisterValidator"
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "$ref": "#/definitions/Error500"
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para autenticar um usuário",
        "parameters": [
          {
            "name": "Login",
            "in": "body",
            "description": "email e password do usuário",
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "null"
                },
                "data": {
                  "$ref": "#/definitions/User"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Autenticação inválida",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "UnauthorizedError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Incorrect e-mail and/or password"
                    }
                  }
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "422": {
            "description": "Erro de Validação",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "$ref": "#/definitions/LoginValidator"
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "$ref": "#/definitions/Error500"
                },
                "data": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/messages/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/messages/{listId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "textContent": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/notifications/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/notifications/list/{listId}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/notifications/user": {
      "delete": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/notifications/{notificationId}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/invites/{inviteId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "inviteId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/invites/{listId}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/cache/clear-all-cache": {
      "delete": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "64c65cb75765cdcc8475091e"
        },
        "username": {
          "type": "string",
          "example": "lets"
        },
        "email": {
          "type": "string",
          "example": "lets@alpha.com"
        },
        "password": {
          "type": "string",
          "example": "$2b$10$NQW4IrPTRilLJ3WyGsiifuqgBnoInixCnIfxG47ULUMlrAwxqFCbi"
        },
        "firstName": {
          "type": "string",
          "example": "aqui"
        },
        "lastName": {
          "type": "string",
          "example": "lets"
        },
        "createdAt": {
          "type": "string",
          "example": "2023-07-30T12:51:03.000Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2023-08-01T00:02:06.068Z"
        }
      }
    },
    "User2": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "64c69aa800481e5a3547dd3d"
        },
        "username": {
          "type": "string",
          "example": "maria"
        },
        "email": {
          "type": "string",
          "example": "maria@alpha.com"
        },
        "password": {
          "type": "string",
          "example": "$2b$10$IZTtQtrMyy9mKTUhrym7TuhPrp6thovDwvJv3hrj6w.5e4kRxqVpO"
        },
        "firstName": {
          "type": "string",
          "example": "maria"
        },
        "lastName": {
          "type": "string",
          "example": "silva"
        },
        "createdAt": {
          "type": "string",
          "example": "2023-07-30T17:15:20.000Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2023-07-30T17:15:20.000Z"
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "lets@alpha.com"
        },
        "password": {
          "type": "string",
          "example": "123"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "LoginValidator": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "UnprocessableEntity"
        },
        "message": {
          "type": "array",
          "example": [
            "email is mandatory.",
            "email must be between 3 and 50 characters.",
            "Invalid email format.",
            "password is mandatory.",
            "password must be at least 3-16 characters long.",
            "password must contain at least one digit."
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Register": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "lets"
        },
        "email": {
          "type": "string",
          "example": "lets@alpha.com"
        },
        "password": {
          "type": "string",
          "example": "1234"
        },
        "firstName": {
          "type": "string",
          "example": "letonio"
        },
        "lastName": {
          "type": "string",
          "example": "fulano"
        }
      },
      "required": [
        "username",
        "email",
        "password",
        "firstName",
        "lastName"
      ]
    },
    "RegisterValidator": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "UnprocessableEntity"
        },
        "message": {
          "type": "array",
          "example": [
            "username is mandatory.",
            "username must be between 3 and 15 characters.",
            "username must contain only letters and digits.",
            "username must be a string.",
            "email is mandatory.",
            "email must be between 3 and 50 characters.",
            "Invalid email format.",
            "password is mandatory.",
            "password must be at least 3-16 characters long.",
            "password must contain at least one digit.",
            "firstName is mandatory.",
            "firstName must be between 3 and 15 characters.",
            "firstName must contain only letters and digits.",
            "firstName must be a string.",
            "lastName is mandatory.",
            "lastName must be between 3 and 15 characters.",
            "lastName must contain only letters and digits.",
            "lastName must be a string."
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UserByIdValidator": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "UnprocessableEntity"
        },
        "message": {
          "type": "array",
          "example": [
            "The userId must be a valid ObjectId."
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UpdateUser": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "lets"
        },
        "email": {
          "type": "string",
          "example": "lets@alpha.com"
        },
        "oldPassword": {
          "type": "string",
          "example": "1234"
        },
        "newPassword": {
          "type": "string",
          "example": "1234"
        },
        "firstName": {
          "type": "string",
          "example": "letonio"
        },
        "lastName": {
          "type": "string",
          "example": "fulano"
        }
      },
      "required": [
        "username",
        "email",
        "oldPassword",
        "newPassword",
        "firstName",
        "lastName"
      ]
    },
    "UpdateUserValidator": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "UnprocessableEntity"
        },
        "message": {
          "type": "array",
          "example": [
            "The userId must be a valid ObjectId.",
            "username is mandatory.",
            "username must be between 3 and 15 characters.",
            "username must contain only letters and digits.",
            "username must be a string.",
            "email is mandatory.",
            "email must be between 3 and 50 characters.",
            "Invalid email format.",
            "oldPassword is mandatory.",
            "oldPassword must be at least 3-16 characters long.",
            "oldPassword must contain at least one digit.",
            "newPassword is mandatory.",
            "newPassword must be at least 3-16 characters long.",
            "newPassword must contain at least one digit.",
            "firstName is mandatory.",
            "firstName must be between 3 and 15 characters.",
            "firstName must contain only letters and digits.",
            "firstName must be a string.",
            "lastName is mandatory.",
            "lastName must be between 3 and 15 characters.",
            "lastName must contain only letters and digits.",
            "lastName must be a string."
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RemoveUserValidator": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "UnprocessableEntity"
        },
        "message": {
          "type": "array",
          "example": [
            "The userId must be a valid ObjectId."
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Error500": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "InternalServerError"
        },
        "message": {
          "type": "string",
          "example": "original error message is..."
        }
      }
    }
  }
}