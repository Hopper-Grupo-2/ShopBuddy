import swaggerAutogen from "swagger-autogen";

const outputFile = "./server/config/swagger.json";
const endpointsFiles = [
  "./server/src/app.ts",
  "./server/src/validators/handle-validation.ts",
];

const swagger = swaggerAutogen({ language: "pt-BR" });

const doc = {
  info: {
    version: "1.0.0",
    title: "Shopbuddy API teste",
    language: "pt-BR",
    description:
      "Documentation automatically generated by the <b>swagger-autogen</b> module.",
  },
  host: "localhost:4021",
  basePath: "/",
  schemes: ["http", "https"],
  /*
  securityDefinitions: {
    sessionAuth: {
      type: "apiKey",
      in: "cookie", // Specify that the authentication is in a cookie
      name: "session", // The name of the cookie
    },
  },
  security: [
    { sessionAuth: [] }, // Enable this security definition for all endpoints
  ],
  */
  consumes: ["application/json"],
  produces: ["application/json"],
  tags: [
    {
      name: "User",
      description: "Endpoints to manage users",
    },
    {
      name: "Post",
      description: "Endpoints to manage posts/feed",
    },
    {
      name: "Group",
      description: "Endpoints to manage group/chats",
    },
  ],
  definitions: {
    User: {
      _id: "64c65cb75765cdcc8475091e",
      username: "lets",
      email: "lets@alpha.com",
      password: "$2b$10$NQW4IrPTRilLJ3WyGsiifuqgBnoInixCnIfxG47ULUMlrAwxqFCbi",
      firstName: "aqui",
      lastName: "lets",
      createdAt: "2023-07-30T12:51:03.000Z",
      updatedAt: "2023-08-01T00:02:06.068Z",
    },
    Login: {
      $email: "lets@alpha.com",
      $password: "123",
    },
    LoginValidator: {
      name: "UnprocessableEntity",
      message: [
        "email is mandatory.",
        "email must be between 3 and 50 characters.",
        "Invalid email format.",
        "password is mandatory.",
        "password must be at least 3-16 characters long.",
        "password must contain at least one digit.",
      ],
    },
    Register: {
      $username: "lets",
      $email: "lets@alpha.com",
      $password: "1234",
      $firstName: "letonio",
      $lastName: "fulano",
    },
    RegisterValidator: {
      name: "UnprocessableEntity",
      message: [
        "username is mandatory.",
        "username must be between 3 and 15 characters.",
        "username must contain only letters and digits.",
        "username must be a string.",
        "email is mandatory.",
        "email must be between 3 and 50 characters.",
        "Invalid email format.",
        "password is mandatory.",
        "password must be at least 3-16 characters long.",
        "password must contain at least one digit.",
        "firstName is mandatory.",
        "firstName must be between 3 and 15 characters.",
        "firstName must contain only letters and digits.",
        "firstName must be a string.",
        "lastName is mandatory.",
        "lastName must be between 3 and 15 characters.",
        "lastName must contain only letters and digits.",
        "lastName must be a string.",
      ],
    },
    AddUser: {
      $nickname: "zoro_oliveira",
      $name: "Zoro Oliveira",
      $password: "123456",
      $team: "São Paulo",
    },
    UpdateUser: {
      $nickname: "zoro_oliveira",
      $name: "Zoro Oliveira",
      $team: "São Paulo",
    },
    Post: {
      _id: "6410b677f77571f9f323740d",
      pathImage: "/img/6410b677f77571f9f323740d.png",
      content: "Esse Ano seremos campeão!!!",
      author: {
        _id: "640f6af6ad964b6d45a13c35",
        nickname: "zoro_oliveira",
        name: "Zoro Oliveira",
        team: "são paulo",
      },
      likes: ["640ab68a27fea004b4b9ce05"],
      comments: [
        {
          content: "Perdemos de novo. Rumo a lanterna",
          author: {
            _id: "640f6af6ad964b6d45a13c35",
            nickname: "zoro_oliveira",
            name: "Zoro Oliveira",
          },
          _id: "6410bf1dace5da35c401601c",
          createdAt: "2023-03-14T18:38:21.739Z",
          updatedAt: "2023-03-14T18:38:21.739Z",
        },
      ],
    },
    AddPost: {
      content: "Esse Ano seremos campeão!!!",
      author: "640f6af6ad964b6d45a13c35",
    },
    AddComment: {
      content: "Perdemos de novo. Rumo à lanterna =(",
      author: "640f6af6ad964b6d45a13c35",
    },
    Group: {
      _id: "6410b677f77571f9f323740d",
      pathImage: "/img/6410b677f77571f9f323740d.png",
      title: "Tricolor Paulista",
      admin: {
        _id: "640f6af6ad964b6d45a13c35",
        nickname: "zoro_oliveira",
        name: "Zoro Oliveira",
        team: "são paulo",
      },
      members: ["640ab68a27fea004b4b9ce05"],
      chat: [
        {
          message: "Quando será o próximo jogo?",
          author: {
            _id: "640f6af6ad964b6d45a13c35",
            nickname: "zoro_oliveira",
            name: "Zoro Oliveira",
          },
          _id: "6410bf1dace5da35c401601c",
          createdAt: "2023-03-14T18:38:21.739Z",
          updatedAt: "2023-03-14T18:38:21.739Z",
        },
      ],
    },
    AddGroup: {
      title: "Tricolor Paulista",
      admin: "640f6af6ad964b6d45a13c35",
      members: ["640ab68a27fea004b4b9ce05"],
    },
    AddMessage: {
      message: "Quando será o próximo jogo?",
      author: "640f6af6ad964b6d45a13c35",
    },
    IResult: {
      errors: ["aconteceu um erro"],
      data: {},
      status: 200,
    },
    Error500: {
      name: "InternalServerError",
      message: "original error message is...",
    },
    UserAddValidator: {
      errors: [
        "[nickname]: O apelido deve ter entre 5 e 25 caracteres",
        "[nickname]: O apelido deve começar com letra pode conter números e não pode terminar com caracteres especiais.",
        "[name]: O nome deve ter entre 5 e 30 caracteres.",
        "[name]: O nome deve conter apenas letras.",
        "[password]: A senha deve ter entre 3 e 15 caracteres.",
        "[team]: O time é obrigatório.",
      ],
    },
    UserUpdateValidator: {
      errors: [
        "[id]: O id deve ser um ObjectId válido.",
        "[nickname]: O apelido deve ter entre 5 e 25 caracteres",
        "[nickname]: O apelido deve começar com letra pode conter números e não pode terminar com caracteres especiais.",
        "[name]: O nome deve ter entre 5 e 30 caracteres.",
        "[name]: O nome deve conter apenas letras.",
        "[team]: O time é obrigatório.",
      ],
    },
    IdValidator: {
      errors: ["[id]: O id deve ser um ObjectId válido."],
    },
    PostValidator: {
      errors: [
        "[author]: O código do autor deve ser um ObjectId válido.",
        "[content]: O conteúdo deve ter no máximo 2500 caracteres.",
      ],
    },
    MessageValidator: {
      errors: [
        "[author]: O código do autor deve ser um ObjectId válido.",
        "[message]: O conteúdo deve ter no máximo 100 caracteres.",
      ],
    },
    GroupValidator: {
      errors: [
        "[admin]: O código do administrador deve ser um ObjectId válido.",
        "[title]: O nome do grupo deve ter entre 5 e 50 caracteres.",
        "[members]: Os códigos dos membros devem ser ObjectIds válidos.",
      ],
    },
  },
};

swagger(outputFile, endpointsFiles, doc);
